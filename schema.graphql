type Burn @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  amount0: BigInt! # uint256
  amount1: BigInt! # uint256
  to: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ChangedOwner @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type FlashLoan @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  tokenAmount: BigInt! # uint256
  wethAmount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type InfinityNFTFeeChange @entity(immutable: true) {
  id: Bytes!
  newFee: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type LpFeeChange @entity(immutable: true) {
  id: Bytes!
  newFee: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Mint @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  liquidity: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Paused @entity(immutable: true) {
  id: Bytes!
  p: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Swap @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  input: BigInt! # uint256
  output: BigInt! # uint256
  to: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
